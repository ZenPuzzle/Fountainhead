%YAML 1.2
---
name: Fountain
file_extensions:
- fountain
scope: text.fountain
contexts:
  main:
  - include: comments
  - include: templates
  - scope: keyword.conditional
    match: ^\s*if\b
  - scope: keyword.conditional
    match: ^\s*elif\b
  - scope: keyword.conditional
    match: ^\s*\bfi\b
  - scope: keyword.conditional
    match: ^\s*repeat\b
  - scope: keyword.conditional
    match: ^\s*until\b
  - scope: keyword.control
    match: (^ {16}CHOICES:)
  - scope: keyword.control
    match: (^ {16}ACTIONS:)
  - scope: string
    match: (^ {16}[A-Z][A-Z0-9_]*\b)
  - scope: keyword.control
    match: (^ {12}\[[A-Z]:)
  - scope: keyword.control
    match: (^ {12}END OF [A-Z]\]:)
  - match: '(^ {4}([A-Z])( (->) ([^\n#:]+))?: +([^\n#\[]*))'
    captures:
      2: keyword.control
      4: keyword.operator
  - scope: entity.name.function
    match: (^ {4}@[A-Za-z0-9]+$)
  - scope: variable.parameter
    match: ^ {4}IMAGE\b
  - scope: variable.parameter
    match: ^ {4}COLLECTIBLE\b
  - match: ^ {4}$
    push: blank_line
  - match: ^ {4}
    push: inline_markdown
  - match: ^ {1,3}
    scope: invalid
  - scope: entity.name.function
    match: (^[A-Z][A-Z0-9_]*\s+joins\b)
  - scope: entity.name.function
    match: (^[A-Z][A-Z0-9_]*\s+leaves\b)
  - scope: markup.heading
    match: (^Chapter \d+)
  - scope: punctuation
    match: \(
  - scope: punctuation
    match: \)
  - scope: punctuation
    match: \[+
  - scope: punctuation
    match: \]+
  - scope: punctuation
    match: ':'
  - scope: punctuation
    match: ','
  - scope: keyword.operator
    match: ==
  - scope: keyword.operator
    match: '!='
  - scope: keyword.operator
    match: '='
  - scope: keyword.operator
    match: \+=
  - scope: keyword.operator
    match: -=
  - scope: keyword.operator
    match: \+
  - scope: keyword.operator
    match: '-'
  - scope: keyword.operator
    match: \*
  - scope: keyword.operator
    match: /
  - scope: keyword.operator
    match: '%'
  - scope: keyword.operator
    match: '>'
  - scope: keyword.operator
    match: <
  - scope: keyword.operator.word
    match: \band\b
  - scope: keyword.operator.word
    match: \bor\b
  - scope: keyword.operator.word
    match: \bnot\b
  - scope: constant.numeric
    match: (\d+)
  - scope: markup.raw
    match: ("[^\n\"]*")
  - scope: keyword.control
    match: \bhref\b
  - scope: keyword.control
    match: \bweight\b
  - scope: variable.name
    match: \b[A-Za-z_][A-Za-z0-9_.]*\b
  blank_line:
  - meta_content_scope: markup.raw
  - match: ^
    pop: true
  inline_markdown:
  - meta_scope: text
  - include: templates
  - match: __
    push: italic
  - match: \*\*
    push: bold
  - match: '`'
    push: monospace
  - match: $
    pop: true
  italic:
  - meta_scope: markup.italic
  - include: comments
  - include: templates
  - match: \*\*
    push: bold
  - match: __
    pop: true
  bold:
  - meta_content_scope: markup.bold
  - include: comments
  - include: templates
  - match: __
    push: italic
  - match: \*\*
    pop: true
  monospace:
  - meta_content_scope: markup.raw.inline
  - include: comments
  - include: templates
  - match: '`'
    pop: true
  comments:
  - scope: comment
    match: \#.*$
  templates:
  - scope: entity.name.tag
    match: \{%\s+macro\b
  - scope: entity.name.tag
    match: \{%\s+endmacro\b
  - scope: entity.name.tag
    match: \{%\s+for
  - scope: entity.name.tag
    match: \{%\sendfor
  - scope: entity.name.tag
    match: \{%\s+if
  - scope: entity.name.tag
    match: \{%\s+endif
  - scope: entity.name.tag
    match: \{%\s+set
  - scope: entity.name.tag
    match: \{%
  - scope: entity.name.tag
    match: '%\}'
  - scope: entity.name.tag
    match: \{\{
  - scope: entity.name.tag
    match: \}\}

